// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id
  email         String        @unique
  uid           String        @unique
  name          String        @default("")
  phoneNum      String        @default("")
  address       String        @default("")
  photo         String        @default("https://placehold.co/500x500.png")
  token         String        @default("")
  role          String        @default("user")
  createdAt     DateTime      @default(now())
  notifications Notification[]
  masters       Master[]
  devices       Device[]
  ponds         Pond[]

  @@map("user")
}

model Article {
  id            String        @id
  title         String        @default("")
  url           String        @default("")
  image         String        @default("")
  published     Int           @default(0)
  createdAt     DateTime      @default(now())

  @@map("article")
}

model Notification {
  id            String        @id
  title         String        @default("")
  message       String        @default("")
  deleted       Int           @default(0)
  createdAt     DateTime      @default(now())
  user          User          @relation(fields: [userId], references: [id])
  userId        String

  @@map("notification")
}

model Master {
  id            String        @id
  name          String        @default("")
  simNumber     String        @default("")
  createdAt     DateTime      @default(now())
  user          User?         @relation(fields: [userId], references: [id])
  userId        String?
  devices       Device[]

  @@map("master")
}

model Device {
  id                    String        @id
  name                  String        @default("")
  notificationEnabled   Int           @default(1)
  notificationCount     Int           @default(0)
  isSaved               Int           @default(0)
  isChanged             Int           @default(0)
  autoWaterEnabled      Int           @default(0)
  autoFeedEnabled       Int           @default(0)
  tempLow               Decimal       @default(0)   @db.Decimal(10,1)
  tempHigh              Decimal       @default(0)   @db.Decimal(10,1)
  phLow                 Decimal       @default(0)   @db.Decimal(10,1)
  phHigh                Decimal       @default(0)   @db.Decimal(10,1)
  tdoLow                Decimal       @default(0)   @db.Decimal(10,1)
  tdoHigh               Decimal       @default(0)   @db.Decimal(10,1)
  tdsLow                Decimal       @default(0)   @db.Decimal(10,1)
  tdsHigh               Decimal       @default(0)   @db.Decimal(10,1)
  turbiditiesLow        Decimal       @default(0)   @db.Decimal(10,1)
  turbiditiesHigh       Decimal       @default(0)   @db.Decimal(10,1)
  createdAt             DateTime      @default(now())
  user                  User?         @relation(fields: [userId], references: [id])
  userId                String?
  master                Master?       @relation(fields: [masterId], references: [id])
  masterId              String?
  pond                  Pond?
  metrics               Metric[]
  metricsTemp           MetricTemp[]

  @@map("device")
}

model Pond {
  id                    String        @id
  name                  String        @default("")
  address               String        @default("")
  city                  String        @default("")
  seedDate              DateTime      @default(now())
  imageUrl              String        @default("https://placehold.co/1280x720.png")
  status                Int           @default(0)
  isFilled              Int           @default(0)
  createdAt             DateTime      @default(now())
  user                  User?         @relation(fields: [userId], references: [id])
  userId                String?
  device                Device?       @relation(fields: [deviceId], references: [id])
  deviceId              String?       @unique
  metrics               Metric[]
  metricsTemp           MetricTemp[]

  @@map("pond")
}

model Metric {
  id                    String        @id
  temperature           Decimal       @default(0)       @db.Decimal(10,1)
  ph                    Decimal       @default(0)       @db.Decimal(10,1)
  tdo                   Decimal       @default(0)       @db.Decimal(10,1)
  tds                   Decimal       @default(0)       @db.Decimal(10,1)
  turbidity             Decimal       @default(0)       @db.Decimal(10,1)
  createdAt             DateTime      @default(now())
  createdAtWib          String        @default("")
  device                Device?       @relation(fields: [deviceId], references: [id])
  deviceId              String?
  pond                  Pond?         @relation(fields: [pondId], references: [id])
  pondId                String?

  @@map("metric")
}

model MetricTemp {
  id                    String        @id
  temperature           Decimal       @default(0)       @db.Decimal(10,1)
  ph                    Decimal       @default(0)       @db.Decimal(10,1)
  tdo                   Decimal       @default(0)       @db.Decimal(10,1)
  tds                   Decimal       @default(0)       @db.Decimal(10,1)
  turbidity             Decimal       @default(0)       @db.Decimal(10,1)
  createdAt             DateTime      @default(now())
  createdAtWib          String        @default("")
  device                Device?       @relation(fields: [deviceId], references: [id])
  deviceId              String?
  pond                  Pond?         @relation(fields: [pondId], references: [id])
  pondId                String?

  @@map("metrictemp")
}

model Log {
  id                    String        @id
  scope                 String        @default("")
  summary               String        @default("")
  createdAt             DateTime      @default(now())

  @@map("log")
}